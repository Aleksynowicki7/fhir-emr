services:
    sdc-ide:
        image: bedasoftware/sdc-ide:master
        depends_on:
            devbox-healthcheck:
                condition: service_healthy
        ports:
            - '3001:5000'
        environment:
          BASE_URL: http:\/\/localhost:8080
          JUTE_URL: http:\/\/localhost:8090
    sdc:
        image: bedasoftware/fhir-sdc:develop
        depends_on:
            devbox-healthcheck:
                condition: service_healthy
        links:
            - devbox
        env_file:
            - .env.sdc
        tty: true
    devbox:
        image: 'healthsamurai/aidboxone:stable'
        depends_on:
            - devbox-db
            - build-seeds
        links:
            - 'devbox-db:database'
        ports:
            - '8080:8080'
        env_file:
            - .env.aidbox
            - .env
        volumes:
            - ./config:/var/config:cached
            - ./zenproject:/zenproject
    devbox-db:
        image: 'healthsamurai/aidboxdb:13.2'
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: devbox
    devbox-healthcheck:
        image: curlimages/curl
        entrypoint: /bin/sleep 10000
        links:
            - devbox
        depends_on:
            - devbox
        healthcheck:
            test: curl --fail http://devbox:8080/health || exit 1
            interval: 5s
            timeout: 30s
            retries: 100
    build-seeds:
        build:
            context: .
            dockerfile: Dockerfile.seeds
        volumes:
          - ./zenproject:/app/zenproject
          - ./resources/seeds:/app/resources/seeds
    scheduling:
        image: bedasoftware/aidbox-scheduling-node-app
        depends_on:
            devbox-healthcheck:
                condition: service_healthy
        env_file:
            - .env.scheduling
            - .env.aidbox
    # jitsi-auth:
    #     image: bedasoftware/jitsi-auth-backend:latest
    #     depends_on:
    #         devbox-healthcheck:
    #             condition: service_healthy
    #     env_file:
    #         - .env.jitsi-auth
    #         - .env.aidbox
    #     environment:
    #         - AUTH_JWT_SECRET
    #         - AUTH_JWT_ACCEPTED_ISSUERS
    #         - AUTH_JWT_ACCEPTED_AUDIENCES
    datastream-timescaledb:
        image: timescale/timescaledb:latest-pg15
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'postgres']
            interval: 5s
            timeout: 5s
            retries: 5
        environment:
            POSTGRES_PASSWORD: postgres
    datastream-timescaledb-migrations:
        image: bedasoftware/fhir-datasequence:latest
        entrypoint:
            - poetry
            - run
            - alembic
            - upgrade
            - head
        depends_on:
            datastream-timescaledb:
                condition: service_healthy
        environment:
            TIMESCALEDB_SERVICE_NAME: datastream-timescaledb
            PGUSER: postgres
            PGPASSWORD: postgres
    datastream:
        image: bedasoftware/fhir-datasequence:latest
        depends_on:
            datastream-timescaledb:
                condition: service_healthy
            datastream-timescaledb-migrations:
                condition: service_completed_successfully
        ports:
            - '8082:8081'
        environment:
            - TIMESCALEDB_SERVICE_NAME=datastream-timescaledb
            - PGUSER=postgres
            - PGPASSWORD=postgres
            - EMR_WEB_URL="http://localhost:3000"
            - METRIPORT_USE_SANDBOX=true
            - METRIPORT_WEBHOOK_AUTH_KEY
            - METRIPORT_API_SECRET
    jute:
        image: bedasoftware/jute-microservice:latest
        ports:
            - '8090:8090'
