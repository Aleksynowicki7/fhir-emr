{ns system
 import #{aidbox
          aidbox.rest
          aidbox.search-parameter.v1
          aidbox.repository.v1
          questionnaire-profile
          hl7-fhir-uv-sdc.sdc-questionnaire
          hl7-fhir-uv-sdc.sdc-questionnaire-extr-defn
          hl7-fhir-uv-sdc.sdc-questionnaire-render
          hl7-fhir-uv-sdc.sdc-questionnaire-pop-smap}

 box
 {:zen/tags #{aidbox/system}
  :zen/desc "Beda EMR"
  :services {:seed seed
             :seed-fixtures seed-fixtures
             :repositories repositories}}

 seed
 {:zen/tags  #{aidbox/service}
  :engine    aidbox/seed
  :files ["seeds.ndjson.gz"]}

 seed-fixtures
 {:zen/tags  #{aidbox/service}
  :engine    aidbox/seed-v2
  :resources
  {:Client {:web {:auth {:implicit {:redirect_uri #env FHIR_EMR_AUTH_URL}}
                  :first_party true
                  :grant_types [:implicit]}
            :testAuth {:grant_types [:password]
                       :secret "123456"}
            :anonymous {:grant_types [:basic]
                        :secret "secret"}
            :patient-questionnaire {:grant_types [:basic]
                                    :secret "secret"}}
   :AccessPolicy {:test-wildcard-policy {:engine "allow" :link [{:resourceType "User"}]}
                  :admin-policy {:engine "allow"
                                 :roleName "admin"}
                  :public-appointment-policy
                  {:engine "allow"
                   :link [{:resourceType "Client" :id "anonymous"}]}
                  :patient-questionnaire-policy
                  {:engine "allow"
                   :link [{:resourceType "Client" :id "patient-questionnaire"}]}}
   :Practitioner {:admin {:name [{:given ["Alex"], :family "Admin"}]}}
   :Role {:admin {:name "admin"
                  :user {:id "admin" :resourceType "User"}
                  :links {:practitioner {:id "admin" :resourceType "Practitioner"}}}}
   :AidboxProfile {:custom-patient-constraint
                   {:bind
                    {:id "Patient"
                     :resourceType "Entity"}
                    :schema {:type "object"
                             :required ["name"]
                             :properties
                             {:name
                              {:type "array"
                               :minItems 1
                               :items {:type "object"
                                       :required ["given" "family"]
                                       :properties
                                       {:given
                                        {:type "array"
                                         :minItems 1
                                         :items {:type "string"}}
                                        :family {:type "string"}}}}}}}}}}

 encounter-participant-display
 {:zen/tags #{aidbox.search-parameter.v1/search-parameter}
  :name "participant-display"
  :type :string
  :resource {:resourceType "Entity" :id "Encounter"}
  :expression [["participant", "individual", "display"]]}

 encounter-repository
 {:zen/tags #{aidbox.repository.v1/repository}
  :resourceType "Encounter"
  :extra-parameter-sources :all ; allow to use SearchParameters from outside of repo
  :search-parameters #{encounter-participant-display}}

 repositories
 {:zen/tags #{aidbox/service}
  :engine aidbox.repository.v1/engine
  :repositories #{encounter-repository}
  :load-default true}}
