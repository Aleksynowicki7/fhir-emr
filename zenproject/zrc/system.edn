{ns system
 import #{aidbox
          aidbox.rest
          aidbox.search-parameter.v1
          aidbox.repository.v1
          questionnaire-profile}


 box
 {:zen/tags #{aidbox/system}
  :zen/desc "Beda EMR"
  :services {:seed seed
             :seed-fixtures seed-fixtures
             :repositories repositories}}

 seed
 {:zen/tags  #{aidbox/service}
  :engine    aidbox/seed
  :files ["seeds.ndjson.gz"]}

 seed-fixtures
 {:zen/tags  #{aidbox/service}
  :engine    aidbox/seed-v2
  :resources
  {:Client {:web {:auth {:implicit {:redirect_uri #env FHIR_EMR_AUTH_URL}}
                  :first_party true
                  :grant_types [:implicit]}
            :testAuth {:grant_types [:password]
                       :secret "123456"}
            :anonymous {:grant_types [:basic]
                        :secret "secret"}
            :patient-questionnaire {:grant_types [:basic]
                                    :secret "secret"}}
   :AccessPolicy {:test-wildcard-policy {:engine "allow" :link [{:resourceType "User"}]}
                  :admin-policy {:engine "allow"
                                 :roleName "admin"}
                  :patient-role-policy {:engine "allow"
                                        :roleName "patient"}
                  :public-appointment-policy
                  {:engine "allow"
                   :link [{:resourceType "Client" :id "anonymous"}]}
                  :patient-questionnaire-policy
                  {:engine "allow"
                   :link [{:resourceType "Client" :id "patient-questionnaire"}]}
                  :federated-identity-signin {:engine "json-schema"
                                              :schema {:required ["jwt"]
                                                       :properties {:jwt {:required ["iss", "aud", "sub"]
                                                                          :properties {:iss {:const "https://appleid.apple.com"}
                                                                                       :aud {:enum ["software.beda.emr", "software.beda.fhirmhealth.fhirmhealth"]}
                                                                                       :sub {:type "string"
                                                                                             :minLength 1}}}}}}}
   :Practitioner {:admin {:name [{:given ["Alex"], :family "Admin"}]}}
   :Role {:admin {:name "admin"
                  :user {:id "admin" :resourceType "User"}
                  :links {:practitioner {:id "admin" :resourceType "Practitioner"}}}}
   :AidboxQuery {:provenance-by-source
                 {:query "select resource || jsonb_build_object('resourceType', 'Provenance', 'id', id) as resource from provenance  where array_to_string(knife_extract_text(resource,'[[\"entity\",\"what\",\"uri\"]]'),'') like {{params.source}}"
                  :params {:source {:type "string" :format "%%%s%%" :isRequired true}}}
                 :provenance-by-target
                 {:query "select resource || jsonb_build_object('resourceType', 'Provenance', 'id', id) as resource from provenance where array_to_string(knife_extract_text(resource,'[[\"target\",\"uri\"]]'),'') like {{params.target}}"
                  :params {:source {:type "string" :format "%%%s%%" :isRequired true}}}}
   :TokenIntrospector {:appleid
                       {:type "jwt"
                        :jwks_uri "https://appleid.apple.com/auth/keys"
                        :jwt {:iss "https://appleid.apple.com"}}}
   :Endpoint {:emr-datasequence-records
              {:identifier [{:system "https://fhir.emr.beda.software/CodeSystem/consent-subject"
                             :value "emr-datasequence-records"}]
               :status "active"
               :name "Activity Data"
               :address "https://ingest.emr.beda.software"
               :connectionType {:system "https://spec.openapis.org/oas/v3.1.0"
                                :code "openapi"}
               :payloadType [{:coding [{:system "http://terminology.hl7.org/CodeSystem/endpoint-payload-type"
                                        :code "urn:ihe:pcc:xphr:2007"}]}]}}}}

 encounter-participant-display
 {:zen/tags #{aidbox.search-parameter.v1/search-parameter}
  :name "participant-display"
  :type :string
  :resource {:resourceType "Entity" :id "Encounter"}
  :expression [["participant", "individual", "display"]]}

 encounter-repository
 {:zen/tags #{aidbox.repository.v1/repository}
  :resourceType "Encounter"
  :extra-parameter-sources :all ; allow to use SearchParameters from outside of repo
  :search-parameters #{encounter-participant-display}}

 repositories
 {:zen/tags #{aidbox/service}
  :engine aidbox.repository.v1/engine
  :repositories #{encounter-repository}
  :load-default true}}
