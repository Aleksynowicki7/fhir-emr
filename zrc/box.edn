{ns box
 import #{aidbox.rest questionnaire-profile}

 box
 {:zen/tags #{aidbox/system}
  :zen/desc "test server"
  :services {:seed seed
             :seed-fixtures seed-fixtures
             :sdc sdc-service}}

 sdc-service
 {:zen/tags  #{aidbox/service}
  :engine    aidbox.sdc/service
  :versioning {:enabled false}}

 seed
 {:zen/tags  #{aidbox/service}
  :engine    aidbox/seed
  :files ["seeds.ndjson.gz"]}

 seed-fixtures
 {:zen/tags  #{aidbox/service}
  :engine    aidbox/seed-v2
  :resources
  {:Client {:web {:auth {:implicit {:redirect_uri #env FHIR_EMR_AUTH_URL}}
                  :first_party true
                  :grant_types [:implicit]}
            :testAuth {:grant_types [:password]
                       :secret "123456"}
            :anonymous {:grant_types [:basic]
                        :secret "secret"}}
   :AccessPolicy {:test-wildcard-policy {:engine "allow" :link [{:resourceType "User"}]}
                  :admin-policy {:engine "json-schema"
                                 :roleName "admin"
                                 :schema {:required ["user" "role"]
                                          :properties
                                          {:role
                                           {:required ["links"]
                                            :properties
                                            {:links
                                             {:required "practitioner"}}}}}}
                  :public-appointment-policy
                  {:engine "json-schema"
                   :link [{:resourceType "Client" :id "anonymous"}]
                   :schema {:oneOf [{:properties
                                     {:request-method {:constant "get"}
                                      :uri {:constant "/Questionnaire/public-appointment/$assemble"}}}
                                    {:properties
                                     {:request-method {:constant "post"}
                                      :uri {:constant "/Questionnaire/$populate"}}}
                                    {:properties
                                     {:request-method {:constant "post"}
                                      :uri {:constant "/Questionnaire/$extract"}}}
                                    {:properties
                                     {:request-method {:constant "post"}
                                      :uri {:constant "/QuestionnaireResponse/$constraint-check"}}}
                                    {:properties
                                     {:request-method {:constant "post"}
                                      :uri {:constant "/Mapping/public-appointment-extract/$apply"}}}
                                    {:properties
                                     {:request-method {:constant "post"}
                                      :uri {:constant "/QuestionnaireResponse"}}}
                                    {:properties
                                     {:request-method {:constant "get"}
                                      :uri {:constant "/Questionnaire"}
                                      :params {:allOf [{:properties {:_count {:constant "2"}}}
                                                       {:properties {:_id {:constant "public-appointment"}}}]}}}
                                    {:properties
                                     {:request-method {:constant "get"}
                                      :params {:required ["resource/type" "resource/id"]
                                               :properties {:resource/type {:constant "PractitionerRole"}}}}}
                                    {:properties
                                     {:request-method {:constant "get"}
                                      :uri {:constant "/PractitionerRole"}
                                      :params {:allOf [{:properties {:_include {:constant "PractitionerRole:practitioner:Practitioner"}}}]}}}
                                    {:properties
                                     {:request-method {:constant "get"}
                                      :uri {:constant "/Appointment"}
                                      :params {:allOf [{:required ["actor"]
                                                        :properties {:actor {:minLength 1}}}
                                                       {:required ["date"]
                                                        :properties {:date {:minLength 1}}}]}}}]}}}
   :Practitioner {:admin {:name [{:given ["Alex"], :family "Admin"}]}}
   :Role {:admin {:name "admin"
                  :user {:id "admin" :resourceType "User"}
                  :links {:practitioner {:id "admin" :resourceType "Practitioner"}}}}}}}
